@import "../styles/_functions";

.example {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.gridCenter {
  display: grid;
  place-items: center;
}

.spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  .circleAbsolute {
    position: absolute;
  }
  .circle {
    fill: none;
    stroke-width: 6;
    stroke-linecap: round;
  }
  .top {
    z-index: 2;
  }
  .bg {
    z-index: 1;
  }
  .blue {
    stroke: var(--font-blue);
  }
  .gray {
    stroke: var(--bg-tertiary);
  }
}

.switch {
  .toggle {
    cursor: pointer;
    position: relative;
    height: 56px;
    width: 98px;
    border-radius: 28px;
    background-color: var(--font-blue);
  }
  .button {
    position: absolute;
    height: 42px;
    width: 42px;
    border-radius: 21px;
    background-color: var(--bg-primary);
    top: 7px;
    left: 7px;
    z-index: 3;
    box-shadow: 1px 1px 12px 1px var(--shadow-light), 0 0 2px 0 var(--shadow-light);
    overflow: hidden;
  }
  .bg {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    top: 0;
    left: 0;
    z-index: 1;
    background-color: var(--bg-tertiary);
  }
  .iconContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
  }
  .icon,
  .iconInner {
    display: grid;
    place-items: center;
  }
  .sun {
    transform-origin: -24px;
  }
  .moon {
    transform-origin: 48px;
  }
}

.menu {
  .menuContainer {
    position: relative;
    display: flex;
    flex-flow: row nowrap;
    gap: 14px;
  }
  .menuItem {
    cursor: pointer;
    position: relative;
    background-color: var(--bg-primary);
    height: 48px;
    width: 48px;
    display: grid;
    place-items: center;
    gap: 0.5rem;
    border-radius: 24px;
    transition: background-color 0.2s ease;
    &:hover {
      background-color: var(--bg-tertiary);
    }
  }
  .innerMenuItem {
    position: absolute;
    z-index: 10;
    display: grid;
    place-items: center;
    > svg {
      height: 32px;
      width: 32px;
    }
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transform: scale(1.5);
    }
  }
  .subMenuContainer {
    z-index: 1;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
  }
  .subMenuItem {
    @extend .gridCenter;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
  }
  .menuSvg {
    @extend .gridCenter;
    padding: 0.5rem;
    &:hover {
      &:before {
        background-color: var(--bg-tertiary);
      }
    }
    &:before {
      content: "";
      z-index: -1;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      background-color: var(--bg-primary);
      width: 150%;
      height: 150%;
      border-radius: 50%;
    }
    > svg {
      transform: scale(2);
    }
  }
  .confused {
    transform: rotate(35deg) translateY(58px);
    > svg {
      transform: rotate(-35deg);
    }
  }
  .shocked {
    transform: rotate(85deg) translateY(58px);
    > svg {
      transform: rotate(-85deg);
    }
  }
  .cool {
    transform: rotate(135deg) translateY(58px);
    > svg {
      transform: rotate(-135deg);
    }
  }
  .active {
    color: var(--font-blue);
  }
  .bowling {
    transform: rotate(-160deg) translateY(58px);
    > svg {
      transform: rotate(160deg);
    }
  }
  .bi {
    transform: rotate(-110deg) translateY(58px);
    > svg {
      transform: rotate(110deg);
    }
  }
  .football {
    transform: rotate(-60deg) translateY(58px);
    > svg {
      transform: rotate(60deg);
    }
  }
  .tennisball {
    transform: rotate(-10deg) translateY(58px);
    > svg {
      transform: rotate(10deg);
    }
  }
}

.springDemo {
  $thumbSize: .75rem;
  $thumbColor: var(--font-secondary);
  $thumbHover: var(--font-blue);
  $sliderBg: var(--bg-tertiary);

  width: 100%;
  height: 100%;
  padding: 1rem;
  display: flex;
  flex-flow: row-reverse;
  background-color: var(--bg-secondary);
  @include responsive {
    gap: 1.5rem;
    padding: 1rem;
    flex-flow: column-reverse nowrap;
  }
  .blue {
    color: var(--font-blue) !important;
  }
  input[type="range"] {
    -webkit-appearance: none; //remove default
    background: transparent; //remove default
    width: 100%;
    height: $thumbSize;
    &:focus {
      outline: none;
    }
    &:focus:--webkit-slider-runnable-track {
      background-color: var(--font-blue)
    }
    &::-webkit-slider-thumb {
      //webkit thumb
      -webkit-appearance: none; //remove default
      background-color: $thumbColor;
      height: $thumbSize;
      width: $thumbSize;
      border-radius: calc($thumbSize/2);
      transform: translateY(calc($thumbSize/-3));
      cursor: pointer;
      transition: all .15s ease;
      &:hover {
        background-color: $thumbHover;
      }
    }
    &::-moz-range-thumb {
      //firefox
      background-color: $thumbColor;
      height: $thumbSize;
      width: $thumbSize;
      border-radius: calc($thumbSize/2);
      border: none;
      cursor: pointer;
      &:hover {
        background-color: $thumbHover;
      }
    }
    &::-ms-thumb {
      // ie
      background-color: $thumbColor;
      height: $thumbSize;
      width: $thumbSize;
      border-radius: calc($thumbSize/2);
      margin: 0;
      cursor: pointer;
      &:hover {
        background-color: $thumbHover;
      }
    }
    &::-ms-track {
      width: 100%;
      cursor: pointer;
      background: transparent;
      border-color: transparent;
      color: transparent;
      width: 100%;
      height: 4px;
    }
    &::-ms-fill-lower {
      background-color: $sliderBg;
    }
    &::-ms-fill-upper {
      background-color: $sliderBg;
    }
    &::-webkit-slider-runnable-track {
      width: 100%;
      height: 4px;
      background-color: $sliderBg;
      border-radius: calc($thumbSize/2)
    }
    &::-moz-range-track {
      width: 100%;
      height: 4px;
      background-color: $sliderBg;
      border-radius: calc($thumbSize/2)
    }
  }
  .controllerContainer, .demoContainer {
    width: 100%;
    flex: 1 1;
    display: grid;
    place-items: center;
  }
  .controllerInputContainer {
    width: 100%;
  }
  .controllerOption {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .controllerOptionList {
    display: flex;
    flex-flow: column nowrap;
    width: 100%;
    @include responsive {
      width: 70%;
    }
  }
  .controllerIconContainer {
    border-radius: .25rem;
  }
  .controllerIcon {
    width: 2.25rem;
    height: 2.25rem;
    display: grid;
    place-items: center;
  }
  .controllerValue {
    width: 2rem;
    font-size: .9rem;
    font-weight: 500;
  }
  .demoContainer {
    display: grid;
    place-items: center;
  }
  .demoElementWrapper {
    width: 10%;
  }
  .demoElement {
    width: 100%;
    max-width: 6rem;
    aspect-ratio: 1/1;
    border-radius: .5rem;
    background-color: var(--font-blue);
    @supports not (aspect-ratio: 1/1) {
      padding-top: 50%;
    }
  }
}

.microanimation {
  .starContainerList {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    display: flex;
    flex-flow: row nowrap;
    gap: .5rem;
  }
  .starContainer {
    position: relative;
    width: 2rem;
    height: 2rem;
    cursor: pointer;
    &:before {
      position: absolute;
      content: '';
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      width: 150%;
      height: 150%;
    }
  }
  .starBgContainer, .starHoverContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
    width: 100%;
    display: grid;
    place-items: center;
  }
  .starBgContainer {
    z-index: 1;
  }
  .starHoverContainer {
    z-index: 5;
  }
  .dot {
    width: 1rem;
    height: 1rem;
    border-radius: .5rem;
    background-color: var(--bg-tertiary);
  }
  .starHover, .starActive {
    display: grid;
    place-items: center;
    transition: color .3s ease;
    color: var(--font-blue);
  }
  .starRed {
    color: var(--tint-red) !important;
  }
  .starOrange {
    color: var(--tint-orange) !important;
  }
  .starYellow {
    color: var(--tint-yellow) !important
  }
  .starGreen {
    color: var(--tint-green) !important
  }
}
